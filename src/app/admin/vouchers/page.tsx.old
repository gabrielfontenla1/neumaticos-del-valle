'use client'

import { useState } from 'react'
import { Search, CheckCircle, XCircle, Gift, Shield } from 'lucide-react'
import { validateVoucherCode, redeemVoucher } from '@/features/reviews/api'
import { ServiceVoucher } from '@/features/reviews/types'
import AdminLayout from '@/features/admin/components/AdminLayout'

export default function AdminVouchersPage() {
  const [code, setCode] = useState('')
  const [voucher, setVoucher] = useState<ServiceVoucher | null>(null)
  const [error, setError] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const [isRedeeming, setIsRedeeming] = useState(false)
  const [redeemNotes, setRedeemNotes] = useState('')
  const [redeemSuccess, setRedeemSuccess] = useState(false)

  const handleSearch = async () => {
    if (!code.trim()) return

    setIsLoading(true)
    setError('')
    setVoucher(null)
    setRedeemSuccess(false)

    const result = await validateVoucherCode(code.toUpperCase())

    if (result.is_valid && result.voucher) {
      setVoucher(result.voucher)
    } else {
      setError(result.error || 'Código de voucher no válido')
    }

    setIsLoading(false)
  }

  const handleRedeem = async () => {
    if (!voucher) return

    setIsRedeeming(true)
    const success = await redeemVoucher(voucher.code, redeemNotes)

    if (success) {
      setRedeemSuccess(true)
      setVoucher(null)
      setCode('')
      setRedeemNotes('')
      setTimeout(() => {
        setRedeemSuccess(false)
      }, 5000)
    } else {
      setError('Error al canjear el voucher')
    }

    setIsRedeeming(false)
  }

  return (
    <AdminLayout>
      <div className="max-w-2xl mx-auto">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="inline-flex items-center justify-center w-16 h-16 bg-purple-100 dark:bg-purple-900/30 rounded-full mb-4">
            <Shield className="w-8 h-8 text-purple-600 dark:text-purple-400" />
          </div>
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-2">
            Administración de Vouchers
          </h1>
          <p className="text-gray-600 dark:text-gray-400">
            Validar y canjear vouchers de servicio
          </p>
        </div>

        {/* Search Section */}
        <div className="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 mb-6">
          <h2 className="text-lg font-semibold mb-4 flex items-center gap-2">
            <Search className="w-5 h-5" />
            Buscar Voucher
          </h2>

          <div className="flex gap-2">
            <input
              type="text"
              value={code}
              onChange={(e) => setCode(e.target.value.toUpperCase())}
              onKeyPress={(e) => e.key === 'Enter' && handleSearch()}
              placeholder="Ingresa el código del voucher (ej: NDV-XXXXX)"
              className="flex-1 px-4 py-2 border rounded-lg bg-white dark:bg-gray-900 border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-purple-500"
            />
            <button
              onClick={handleSearch}
              disabled={isLoading}
              className="px-6 py-2 bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {isLoading ? (
                <div className="animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent" />
              ) : (
                'Buscar'
              )}
            </button>
          </div>

          {error && (
            <div className="mt-4 bg-red-50 dark:bg-red-900/20 text-red-600 dark:text-red-400 p-3 rounded-lg flex items-center gap-2">
              <XCircle className="w-5 h-5" />
              {error}
            </div>
          )}
        </div>

        {/* Voucher Details */}
        {voucher && (
          <div className="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-6 mb-6">
            <h2 className="text-lg font-semibold mb-4 flex items-center gap-2">
              <Gift className="w-5 h-5 text-green-600" />
              Detalles del Voucher
            </h2>

            <div className="space-y-3 mb-6">
              <div className="grid grid-cols-2 gap-2">
                <span className="text-gray-600 dark:text-gray-400">Código:</span>
                <span className="font-mono font-bold">{voucher.code}</span>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <span className="text-gray-600 dark:text-gray-400">Cliente:</span>
                <span>{voucher.customer_name}</span>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <span className="text-gray-600 dark:text-gray-400">Teléfono:</span>
                <span>{voucher.customer_phone}</span>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <span className="text-gray-600 dark:text-gray-400">Email:</span>
                <span>{voucher.customer_email}</span>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <span className="text-gray-600 dark:text-gray-400">Servicio:</span>
                <span className="font-medium text-green-600 dark:text-green-400">
                  Inspección gratuita
                </span>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <span className="text-gray-600 dark:text-gray-400">Estado:</span>
                <span className="inline-flex items-center gap-1">
                  <CheckCircle className="w-4 h-4 text-green-500" />
                  <span className="text-green-600 dark:text-green-400 font-medium">Activo</span>
                </span>
              </div>
              <div className="grid grid-cols-2 gap-2">
                <span className="text-gray-600 dark:text-gray-400">Válido hasta:</span>
                <span>{new Date(voucher.valid_until).toLocaleDateString('es-CL')}</span>
              </div>
            </div>

            {/* Redeem Section */}
            <div className="border-t pt-4">
              <h3 className="font-semibold mb-3">Canjear Voucher</h3>
              <div className="space-y-3">
                <textarea
                  value={redeemNotes}
                  onChange={(e) => setRedeemNotes(e.target.value)}
                  placeholder="Notas del servicio realizado (opcional)"
                  className="w-full px-4 py-2 border rounded-lg bg-white dark:bg-gray-900 border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-purple-500 h-24 resize-none"
                />
                <button
                  onClick={handleRedeem}
                  disabled={isRedeeming}
                  className="w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2"
                >
                  {isRedeeming ? (
                    <>
                      <div className="animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent" />
                      Procesando...
                    </>
                  ) : (
                    <>
                      <CheckCircle className="w-5 h-5" />
                      Canjear y Marcar como Usado
                    </>
                  )}
                </button>
              </div>
            </div>
          </div>
        )}

        {/* Success Message */}
        {redeemSuccess && (
          <div className="bg-green-50 dark:bg-green-900/20 rounded-xl p-6 text-center">
            <CheckCircle className="w-12 h-12 text-green-600 mx-auto mb-3" />
            <h3 className="text-lg font-semibold text-green-800 dark:text-green-300 mb-1">
              Voucher Canjeado Exitosamente
            </h3>
            <p className="text-green-700 dark:text-green-400">
              El servicio ha sido registrado correctamente
            </p>
          </div>
        )}
      </div>
    </AdminLayout>
  )
}